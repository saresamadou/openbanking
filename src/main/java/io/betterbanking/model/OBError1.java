/*
 * Account and Transaction API Specification
 * Swagger for Account and Transaction API Specification
 *
 * OpenAPI spec version: v3.1.6
 * Contact: ServiceDesk@openbanking.org.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.betterbanking.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * OBError1
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-11-29T19:03:17.493Z[GMT]")
public class OBError1 {
    @SerializedName("ErrorCode")
    private String errorCode = null;

    @SerializedName("Message")
    private String message = null;

    @SerializedName("Path")
    private String path = null;

    @SerializedName("Url")
    private String url = null;

    public OBError1 errorCode(String errorCode) {
        this.errorCode = errorCode;
        return this;
    }

    /**
     * Low level textual error code, e.g., UK.OBIE.Field.Missing
     *
     * @return errorCode
     **/
    @Schema(required = true, description = "Low level textual error code, e.g., UK.OBIE.Field.Missing")
    public String getErrorCode() {
        return errorCode;
    }

    public void setErrorCode(String errorCode) {
        this.errorCode = errorCode;
    }

    public OBError1 message(String message) {
        this.message = message;
        return this;
    }

    /**
     * A description of the error that occurred. e.g., &#x27;A mandatory field isn&#x27;t supplied&#x27; or &#x27;RequestedExecutionDateTime must be in future&#x27; OBIE doesn&#x27;t standardise this field
     *
     * @return message
     **/
    @Schema(required = true, description = "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future' OBIE doesn't standardise this field")
    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public OBError1 path(String path) {
        this.path = path;
        return this;
    }

    /**
     * Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency
     *
     * @return path
     **/
    @Schema(description = "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency")
    public String getPath() {
        return path;
    }

    public void setPath(String path) {
        this.path = path;
    }

    public OBError1 url(String url) {
        this.url = url;
        return this;
    }

    /**
     * URL to help remediate the problem, or provide more information, or to API Reference, or help etc
     *
     * @return url
     **/
    @Schema(description = "URL to help remediate the problem, or provide more information, or to API Reference, or help etc")
    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }


    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        OBError1 obError1 = (OBError1) o;
        return Objects.equals(this.errorCode, obError1.errorCode) &&
                Objects.equals(this.message, obError1.message) &&
                Objects.equals(this.path, obError1.path) &&
                Objects.equals(this.url, obError1.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(errorCode, message, path, url);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class OBError1 {\n");

        sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
        sb.append("    message: ").append(toIndentedString(message)).append("\n");
        sb.append("    path: ").append(toIndentedString(path)).append("\n");
        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
